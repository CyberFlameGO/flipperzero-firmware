name: 'Analyze .map file with Amap'

on:
  push:
    branches:
      - dev
      - "release*"
    tags:
      - '*'
  pull_request:

env:
  TARGETS: f7

jobs:
  amap_analyse:
    runs-on: [self-hosted,FlipperZeroMacShell]
    steps:
      #- name: 'Decontaminate previous build leftovers'
      #  run: |
      #    if [ -d .git ]
      #    then
          #git submodule status \
          #    || git checkout `git rev-list --max-parents=0 HEAD | tail -n 1`
          #    fi

          #- name: 'Checkout code'
          #uses: actions/checkout@v2
          #with:
          #fetch-depth: 0

      #- name: 'Build the firmware'
      #  run: SET_GH_OUTPUT=1 FBT_TOOLCHAIN_PATH=/opt ./fbt

          #- name: 'Make artifacts directory'
          #run: |
          #rm -rf artifacts
          #mkdir artifacts

      - name: 'Make amap report'
        run: |
          cp build/latest/firmware.elf.map artifacts/
          cd artifacts/
          /Applications/amap/Contents/MacOS/amap -f firmware.elf.map

      - name: 'Upload report to database'
        run: |
          export SIZE_OUT="$(/opt/toolchain/x86_64-darwin/bin/arm-none-eabi-size build/latest/firmware.elf | tail -n 1)"
          export REF="${{github.ref}}"
          export COMMIT_MSG="${{github.event.head_commit.message}}"
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            export COMMIT_MSG="$(git log --format=%B -n 1)"
            export PULL_ID="${{github.event.pull_request.number}}"
            export PULL_NAME="${{github.event.pull_request.title}}"
            export REF="${{github.head_ref}}"
          fi
          export BRANCH_NAME="${REF#refs/*/}"
          export COMMIT_HASH="$(git rev-parse --short HEAD)"
          export BSS_SIZE="$(awk '{print $3}' <<< $SIZE_OUT)"
          export TEXT_SIZE="$(awk '{print $1}' <<< $SIZE_OUT)"
          export
          /usr/local/bin/amap_mariadb_insert.py artifacts/firmware.elf.map.all
